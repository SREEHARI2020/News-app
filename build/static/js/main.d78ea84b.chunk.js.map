{"version":3,"sources":["components/NewsArticle.js","components/News.js","NewsContext.js","App.js","reportWebVitals.js","index.js"],"names":["NewsArticle","data","className","title","description","author","Intl","DateTimeFormat","month","day","year","format","Date","publishedAt","source","name","News","useContext","NewsContext","articles","map","news","url","createContext","NewsContextProvider","props","useState","setData","useEffect","console","log","axios","get","then","response","catch","error","Provider","value","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAiBeA,MAff,YAAgC,IAATC,EAAQ,EAARA,KACrB,OACE,sBAAKC,UAAU,OAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BD,EAAKE,QAClC,mBAAGD,UAAU,aAAb,SAA2BD,EAAKG,cAChC,sBAAMF,UAAU,eAAhB,SAAgCD,EAAKI,SAHvC,IAGsD,uBACpD,sBAAMH,UAAU,kBAAhB,SAAmC,IAAII,KAAKC,eAAe,QAAS,CACtCC,MAAO,QAASC,IAAK,UAAWC,KAAM,YAChDC,OAAO,IAAIC,KAAKX,EAAKY,gBAEzC,sBAAMX,UAAU,eAAhB,SAAgCD,EAAKa,OAAOC,WCRrCC,EAAO,WAClB,IAAMf,EAAQgB,qBAAWC,GAKzB,OACE,gCACC,uCAAS,iCAAQ,oBAAIhB,UAAU,aAAd,+BAChB,qBAAKA,UAAU,YAAf,SACGD,EACGA,EAAKkB,SAASC,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAAapB,KAAMoB,GAAWA,EAAKC,QAErC,gBCdCJ,EAAcK,0BAEdC,EAAqB,SAACC,GAAW,IAAD,EACnBC,qBADmB,mBACpCzB,EADoC,KAC9B0B,EAD8B,KAgB3C,OAZAC,qBAAU,WAERC,QAAQC,IAAI,WACZC,IACGC,IADH,yHAIGC,MAAK,SAACC,GAAD,OAAaP,EAAQO,EAASjC,SACnCkC,OAAM,SAACC,GAAD,OAAWP,QAAQC,IAAIM,QAE/B,IAGD,cAAClB,EAAYmB,SAAb,CAAsBC,MAAOrC,EAA7B,SAEC,cAAC,EAAD,O,MCVUsC,MARf,WACE,OAEI,cAAC,EAAD,KCESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d78ea84b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction NewsArticle({ data }) {\r\n  return (\r\n    <div className=\"news\">\r\n      <h1 className=\"news__title\">{data.title}</h1>\r\n      <p className=\"news__desc\">{data.description}</p>\r\n      <span className=\"news__author\">{data.author}</span> <br />\r\n      <span className=\"news__published\">{new Intl.DateTimeFormat('en-US', {\r\n                                    month: 'short', day: '2-digit', year: 'numeric' \r\n                       }).format(new Date(data.publishedAt))}</span>\r\n      \r\n      <span className=\"news__source\">{data.source.name}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewsArticle;","import React, { useContext } from \"react\";\r\nimport { NewsContext } from \"../NewsContext\";\r\nimport NewsArticle from \"./NewsArticle\";\r\n\r\nexport const News = () => {\r\n  const data  = useContext(NewsContext);\r\n\r\n \r\n  \r\n\r\n  return (\r\n    <div>\r\n     <header> <navbar><h1 className=\"head__text\">World today </h1></navbar></header>\r\n      <div className=\"all__news\">\r\n        {data\r\n          ? data.articles.map((news) => (\r\n              <NewsArticle data={news} key={news.url} />\r\n            ))\r\n          : \"Loading\"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {News} from './components/News'\r\n\r\nexport const NewsContext = createContext();\r\n\r\nexport const NewsContextProvider= (props) => {\r\n  const [data, setData] = useState();\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    console.log(\"console\");\r\n    axios\r\n      .get(\r\n        `http://newsapi.org/v2/everything?q=bitcoin&from=2020-10-23&sortBy=publishedAt&apiKey=f0cc6e9dae1f44c9973c729d9bf07c1c`\r\n      )\r\n      .then((response) =>setData(response.data))\r\n      .catch((error) => console.log(error));\r\n      \r\n  }, []);\r\n\r\n  return (\r\n    <NewsContext.Provider value={data}>\r\n      \r\n     <News />\r\n    </NewsContext.Provider>\r\n  );\r\n};","  \nimport React from \"react\";\n\nimport { NewsContextProvider } from \"./NewsContext\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    \n      <NewsContextProvider />\n       \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}